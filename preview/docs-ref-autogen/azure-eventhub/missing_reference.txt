Any: "<pending_xref py:class=\"EventHubProducerClient\" py:module=\"azure.eventhub.aio\"\
  \ refdoc=\"azure.eventhub.aio\" refdomain=\"py\" refexplicit=\"False\" refspecific=\"\
  True\" reftarget=\"Any\" reftype=\"class\">\n    Any\n"
Awaitable: "<pending_xref py:class=\"EventHubConsumerClient\" py:module=\"azure.eventhub.aio\"\
  \ refdoc=\"azure.eventhub.aio\" refdomain=\"py\" refspecific=\"False\" reftarget=\"\
  Awaitable\" reftype=\"class\">\n    Awaitable\n"
Callable: "<pending_xref py:class=\"EventHubConsumerClient\" py:module=\"azure.eventhub.aio\"\
  \ refdoc=\"azure.eventhub.aio\" refdomain=\"py\" refexplicit=\"False\" refspecific=\"\
  True\" reftarget=\"Callable\" reftype=\"class\">\n    <literal_emphasis>\n     \
  \   Callable\n"
CredentialTypes: "<pending_xref py:class=\"True\" py:module=\"azure.eventhub.aio\"\
  \ refdoc=\"azure.eventhub.aio\" refdomain=\"py\" refspecific=\"False\" reftarget=\"\
  CredentialTypes\" reftype=\"class\">\n    CredentialTypes\n"
DEPRECATED: "<pending_xref py:class=\"EventDataBatch\" py:module=\"azure.eventhub\"\
  \ refdoc=\"azure.eventhub\" refdomain=\"py\" refexplicit=\"False\" refspecific=\"\
  True\" reftarget=\"DEPRECATED\" reftype=\"class\">\n    DEPRECATED\n"
Dict: "<pending_xref py:class=\"AmqpAnnotatedMessage\" py:module=\"azure.eventhub.amqp\"\
  \ refdoc=\"azure.eventhub.amqp\" refdomain=\"py\" refexplicit=\"False\" refspecific=\"\
  True\" reftarget=\"Dict\" reftype=\"class\">\n    Dict\n"
Exception: "<pending_xref py:class=\"EventHubProducerClient\" py:module=\"azure.eventhub.aio\"\
  \ refdoc=\"azure.eventhub.aio\" refdomain=\"py\" refspecific=\"False\" reftarget=\"\
  Exception\" reftype=\"class\">\n    Exception\n"
Iterable: "<pending_xref py:class=\"CheckpointStore\" py:module=\"azure.eventhub.aio\"\
  \ refdoc=\"azure.eventhub.aio\" refdomain=\"py\" refexplicit=\"False\" refspecific=\"\
  True\" reftarget=\"Iterable\" reftype=\"class\">\n    <literal_emphasis>\n     \
  \   Iterable\n"
LegacyBatchMessage: "<pending_xref py:class=\"EventDataBatch\" py:module=\"azure.eventhub\"\
  \ refdoc=\"azure.eventhub\" refdomain=\"py\" refexplicit=\"False\" refspecific=\"\
  True\" reftarget=\"LegacyBatchMessage\" reftype=\"class\">\n    LegacyBatchMessage\n"
LegacyMessage: "<pending_xref py:class=\"EventData\" py:module=\"azure.eventhub\"\
  \ refdoc=\"azure.eventhub\" refdomain=\"py\" refexplicit=\"False\" refspecific=\"\
  True\" reftarget=\"LegacyMessage\" reftype=\"class\">\n    LegacyMessage\n"
List: "<pending_xref py:class=\"EventHubProducerClient\" py:module=\"azure.eventhub.aio\"\
  \ refdoc=\"azure.eventhub.aio\" refdomain=\"py\" refexplicit=\"False\" refspecific=\"\
  True\" reftarget=\"List\" reftype=\"class\">\n    <literal_emphasis>\n        List\n"
None: "<pending_xref py:class=\"PartitionContext\" py:module=\"azure.eventhub.aio\"\
  \ refdoc=\"azure.eventhub.aio\" refdomain=\"py\" refexplicit=\"False\" refspecific=\"\
  True\" reftarget=\"None\" reftype=\"class\">\n    None\n"
Optional: "<pending_xref py:class=\"AmqpMessageProperties\" py:module=\"azure.eventhub.amqp\"\
  \ refdoc=\"azure.eventhub.amqp\" refdomain=\"py\" refexplicit=\"False\" refspecific=\"\
  True\" reftarget=\"Optional\" reftype=\"class\">\n    <literal_emphasis>\n     \
  \   Optional\n"
TypeError: "<pending_xref py:class=\"EventHubProducerClient\" py:module=\"azure.eventhub.aio\"\
  \ refdoc=\"azure.eventhub.aio\" refdomain=\"py\" refexplicit=\"False\" reftarget=\"\
  TypeError\" reftype=\"class\" refwarn=\"False\">\n    <literal classes=\"xref py\
  \ py-class\">\n        TypeError\n"
Union: "<pending_xref py:class=\"EventHubProducerClient\" py:module=\"azure.eventhub.aio\"\
  \ refdoc=\"azure.eventhub.aio\" refdomain=\"py\" refexplicit=\"False\" refspecific=\"\
  True\" reftarget=\"Union\" reftype=\"class\">\n    <literal_emphasis>\n        Union\n"
ValueError: "<pending_xref py:class=\"EventHubProducerClient\" py:module=\"azure.eventhub.aio\"\
  \ refdoc=\"azure.eventhub.aio\" refdomain=\"py\" refexplicit=\"False\" reftarget=\"\
  ValueError\" reftype=\"class\" refwarn=\"False\">\n    <literal classes=\"xref py\
  \ py-class\">\n        ValueError\n"
bool: "<pending_xref py:class=\"AmqpMessageHeader\" py:module=\"azure.eventhub.amqp\"\
  \ refdoc=\"azure.eventhub.amqp\" refdomain=\"py\" refexplicit=\"False\" refspecific=\"\
  True\" reftarget=\"bool\" reftype=\"class\">\n    <literal_emphasis>\n        bool\n"
bytes: "<pending_xref py:class=\"AmqpMessageProperties\" py:module=\"azure.eventhub.amqp\"\
  \ refdoc=\"azure.eventhub.amqp\" refdomain=\"py\" refexplicit=\"False\" refspecific=\"\
  True\" reftarget=\"bytes\" reftype=\"class\">\n    <literal_emphasis>\n        bytes\n"
dict: "<pending_xref py:class=\"PartitionContext\" py:module=\"azure.eventhub.aio\"\
  \ refdoc=\"azure.eventhub.aio\" refdomain=\"py\" refexplicit=\"False\" refspecific=\"\
  True\" reftarget=\"dict\" reftype=\"class\">\n    dict\n"
float: "<pending_xref py:class=\"EventHubProducerClient\" py:module=\"azure.eventhub.aio\"\
  \ refdoc=\"azure.eventhub.aio\" refdomain=\"py\" refspecific=\"False\" reftarget=\"\
  float\" reftype=\"class\">\n    float\n"
int: "<pending_xref py:class=\"AmqpMessageProperties\" py:module=\"azure.eventhub.amqp\"\
  \ refdoc=\"azure.eventhub.amqp\" refdomain=\"py\" refexplicit=\"False\" refspecific=\"\
  True\" reftarget=\"int\" reftype=\"class\">\n    <literal_emphasis>\n        int\n"
list: "<pending_xref py:class=\"EventHubProducerClient\" py:module=\"azure.eventhub.aio\"\
  \ refdoc=\"azure.eventhub.aio\" refdomain=\"py\" refexplicit=\"False\" refspecific=\"\
  True\" reftarget=\"list\" reftype=\"class\">\n    list\n"
object: "<pending_xref py:class=\"AmqpAnnotatedMessage\" py:module=\"azure.eventhub.amqp\"\
  \ refdoc=\"azure.eventhub.amqp\" refdomain=\"py\" refexplicit=\"False\" reftarget=\"\
  object\" reftype=\"class\" refwarn=\"False\">\n    <literal classes=\"xref py py-class\"\
  >\n        object\n"
str: "<pending_xref py:class=\"AmqpMessageBodyType\" py:module=\"azure.eventhub.amqp\"\
  \ refdoc=\"azure.eventhub.amqp\" refdomain=\"py\" refexplicit=\"False\" reftarget=\"\
  str\" reftype=\"class\" refwarn=\"False\">\n    <literal classes=\"xref py py-class\"\
  >\n        str\n"
