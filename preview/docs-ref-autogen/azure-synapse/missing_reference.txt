Any: "<pending_xref py:class=\"SparkSessionOperations\" py:module=\"azure.synapse.spark.operations\"\
  \ refdoc=\"azure.synapse.spark.operations\" refdomain=\"py\" refspecific=\"False\"\
  \ reftarget=\"Any\" reftype=\"class\">\n    Any\n"
AsyncTokenCredential: "<pending_xref py:class=\"True\" py:module=\"azure.synapse.spark.aio\"\
  \ refdoc=\"azure.synapse.spark.aio\" refdomain=\"py\" refspecific=\"False\" reftarget=\"\
  AsyncTokenCredential\" reftype=\"class\">\n    AsyncTokenCredential\n"
Dict: "<pending_xref py:class=\"PipelineOperations\" py:module=\"azure.synapse.artifacts.operations\"\
  \ refdoc=\"azure.synapse.artifacts.operations\" refdomain=\"py\" refspecific=\"\
  False\" reftarget=\"Dict\" reftype=\"class\">\n    Dict\n"
Iterable: "<pending_xref py:class=\"TriggerOperations\" py:module=\"azure.synapse.artifacts.operations\"\
  \ refdoc=\"azure.synapse.artifacts.operations\" refdomain=\"py\" refspecific=\"\
  False\" reftarget=\"Iterable\" reftype=\"class\">\n    Iterable\n"
LROPoller: "<pending_xref py:class=\"TriggerOperations\" py:module=\"azure.synapse.artifacts.operations\"\
  \ refdoc=\"azure.synapse.artifacts.operations\" refdomain=\"py\" refspecific=\"\
  False\" reftarget=\"LROPoller\" reftype=\"class\">\n    LROPoller\n"
List: "<pending_xref py:class=\"AccessControlOperations\" py:module=\"azure.synapse.accesscontrol.operations\"\
  \ refdoc=\"azure.synapse.accesscontrol.operations\" refdomain=\"py\" refspecific=\"\
  False\" reftarget=\"List\" reftype=\"class\">\n    List\n"
None: "<pending_xref py:class=\"SparkSessionOperations\" py:module=\"azure.synapse.spark.operations\"\
  \ refdoc=\"azure.synapse.spark.operations\" refdomain=\"py\" refexplicit=\"False\"\
  \ refspecific=\"True\" reftarget=\"None\" reftype=\"class\">\n    None\n"
TokenCredential: "<pending_xref py:class=\"True\" py:module=\"azure.synapse.aio\"\
  \ refdoc=\"azure.synapse.aio\" refdomain=\"py\" refspecific=\"False\" reftarget=\"\
  TokenCredential\" reftype=\"class\">\n    TokenCredential\n"
bool: "<pending_xref py:class=\"SparkSessionOperations\" py:module=\"azure.synapse.spark.operations\"\
  \ refdoc=\"azure.synapse.spark.operations\" refdomain=\"py\" refexplicit=\"False\"\
  \ refspecific=\"True\" reftarget=\"bool\" reftype=\"class\">\n    <literal_emphasis>\n\
  \        bool\n"
dict: "<pending_xref py:class=\"SparkSessionOptions\" py:module=\"azure.synapse.spark.models\"\
  \ refdoc=\"azure.synapse.spark.models\" refdomain=\"py\" refexplicit=\"False\" refspecific=\"\
  True\" reftarget=\"dict\" reftype=\"class\">\n    <literal_emphasis>\n        dict\n"
int: "<pending_xref py:class=\"SparkSessionOperations\" py:module=\"azure.synapse.spark.operations\"\
  \ refdoc=\"azure.synapse.spark.operations\" refdomain=\"py\" refexplicit=\"False\"\
  \ refspecific=\"True\" reftarget=\"int\" reftype=\"class\">\n    <literal_emphasis>\n\
  \        int\n"
list: "<pending_xref py:class=\"SparkStatementOutput\" py:module=\"azure.synapse.spark.models\"\
  \ refdoc=\"azure.synapse.spark.models\" refdomain=\"py\" refexplicit=\"False\" refspecific=\"\
  True\" reftarget=\"list\" reftype=\"class\">\n    <literal_emphasis>\n        list\n"
object: "<pending_xref py:class=\"SparkSessionOperations\" py:module=\"azure.synapse.spark.operations\"\
  \ refdoc=\"azure.synapse.spark.operations\" refdomain=\"py\" refexplicit=\"False\"\
  \ reftarget=\"object\" reftype=\"class\" refwarn=\"False\">\n    <literal classes=\"\
  xref py py-class\">\n        object\n"
str: "<pending_xref py:class=\"SparkStatementOutput\" py:module=\"azure.synapse.spark.models\"\
  \ refdoc=\"azure.synapse.spark.models\" refdomain=\"py\" refexplicit=\"False\" refspecific=\"\
  True\" reftarget=\"str\" reftype=\"class\">\n    <literal_emphasis>\n        str\n"
