Any: "<pending_xref py:class=\"AvroEncoder\" py:module=\"azure.schemaregistry.encoder.avroencoder.aio\"\
  \ refdoc=\"azure.schemaregistry.encoder.avroencoder.aio\" refdomain=\"py\" refexplicit=\"\
  False\" refspecific=\"True\" reftarget=\"Any\" reftype=\"class\">\n    <literal_emphasis>\n\
  \        Any\n"
Dict: "<pending_xref py:class=\"AvroEncoder\" py:module=\"azure.schemaregistry.encoder.avroencoder.aio\"\
  \ refdoc=\"azure.schemaregistry.encoder.avroencoder.aio\" refdomain=\"py\" refexplicit=\"\
  False\" refspecific=\"True\" reftarget=\"Dict\" reftype=\"class\">\n    Dict\n"
Mapping: "<pending_xref py:class=\"AvroEncoder\" py:module=\"azure.schemaregistry.encoder.avroencoder.aio\"\
  \ refdoc=\"azure.schemaregistry.encoder.avroencoder.aio\" refdomain=\"py\" refexplicit=\"\
  False\" refspecific=\"True\" reftarget=\"Mapping\" reftype=\"class\">\n    <literal_emphasis>\n\
  \        Mapping\n"
ValueError: "<pending_xref py:class=\"InvalidSchemaError\" py:module=\"azure.schemaregistry.encoder.avroencoder\"\
  \ refdoc=\"azure.schemaregistry.encoder.avroencoder\" refdomain=\"py\" refexplicit=\"\
  False\" reftarget=\"ValueError\" reftype=\"class\" refwarn=\"False\">\n    <literal\
  \ classes=\"xref py py-class\">\n        ValueError\n"
bytes: "<pending_xref py:class=\"MessageType\" py:module=\"azure.schemaregistry.encoder.avroencoder\"\
  \ refdoc=\"azure.schemaregistry.encoder.avroencoder\" refdomain=\"py\" refexplicit=\"\
  False\" refspecific=\"True\" reftarget=\"bytes\" reftype=\"class\">\n    <literal_emphasis>\n\
  \        bytes\n"
dict: "<pending_xref py:class=\"InvalidSchemaError\" py:module=\"azure.schemaregistry.encoder.avroencoder\"\
  \ refdoc=\"azure.schemaregistry.encoder.avroencoder\" refdomain=\"py\" refexplicit=\"\
  False\" refspecific=\"True\" reftarget=\"dict\" reftype=\"class\">\n    <literal_emphasis>\n\
  \        dict\n"
object: "<pending_xref py:class=\"AvroEncoder\" py:module=\"azure.schemaregistry.encoder.avroencoder.aio\"\
  \ refdoc=\"azure.schemaregistry.encoder.avroencoder.aio\" refdomain=\"py\" refexplicit=\"\
  False\" reftarget=\"object\" reftype=\"class\" refwarn=\"False\">\n    <literal\
  \ classes=\"xref py py-class\">\n        object\n"
str: "<pending_xref py:class=\"AvroEncoder\" py:module=\"azure.schemaregistry.encoder.avroencoder.aio\"\
  \ refdoc=\"azure.schemaregistry.encoder.avroencoder.aio\" refdomain=\"py\" refexplicit=\"\
  False\" refspecific=\"True\" reftarget=\"str\" reftype=\"class\">\n    <literal_emphasis>\n\
  \        str\n"
