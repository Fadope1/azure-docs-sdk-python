Any: "<pending_xref py:class=\"WorkspacesOperations\" py:module=\"azure.mgmt.loganalytics.operations\"\
  \ refdoc=\"azure.mgmt.loganalytics.operations\" refdomain=\"py\" refspecific=\"\
  False\" reftarget=\"Any\" reftype=\"class\">\n    Any\n"
AsyncTokenCredential: "<pending_xref py:class=\"True\" py:module=\"azure.mgmt.loganalytics.aio\"\
  \ refdoc=\"azure.mgmt.loganalytics.aio\" refdomain=\"py\" refspecific=\"False\"\
  \ reftarget=\"AsyncTokenCredential\" reftype=\"class\">\n    AsyncTokenCredential\n"
Iterable: "<pending_xref py:class=\"WorkspacesOperations\" py:module=\"azure.mgmt.loganalytics.operations\"\
  \ refdoc=\"azure.mgmt.loganalytics.operations\" refdomain=\"py\" refspecific=\"\
  False\" reftarget=\"Iterable\" reftype=\"class\">\n    Iterable\n"
LROPoller: "<pending_xref py:class=\"WorkspacesOperations\" py:module=\"azure.mgmt.loganalytics.operations\"\
  \ refdoc=\"azure.mgmt.loganalytics.operations\" refdomain=\"py\" refspecific=\"\
  False\" reftarget=\"LROPoller\" reftype=\"class\">\n    LROPoller\n"
List: "<pending_xref py:class=\"IntelligencePacksOperations\" py:module=\"azure.mgmt.loganalytics.operations\"\
  \ refdoc=\"azure.mgmt.loganalytics.operations\" refdomain=\"py\" refspecific=\"\
  False\" reftarget=\"List\" reftype=\"class\">\n    List\n"
None: "<pending_xref py:class=\"WorkspacesOperations\" py:module=\"azure.mgmt.loganalytics.operations\"\
  \ refdoc=\"azure.mgmt.loganalytics.operations\" refdomain=\"py\" refexplicit=\"\
  False\" refspecific=\"True\" reftarget=\"None\" reftype=\"class\">\n    None\n"
any: "<pending_xref py:class=\"WorkspacePurgeBodyFilters\" py:module=\"azure.mgmt.loganalytics.models\"\
  \ refdoc=\"azure.mgmt.loganalytics.models\" refdomain=\"py\" refexplicit=\"False\"\
  \ refspecific=\"True\" reftarget=\"any\" reftype=\"class\">\n    <literal_emphasis>\n\
  \        any\n"
bool: "<pending_xref py:class=\"WorkspacesOperations\" py:module=\"azure.mgmt.loganalytics.operations\"\
  \ refdoc=\"azure.mgmt.loganalytics.operations\" refdomain=\"py\" refexplicit=\"\
  False\" refspecific=\"True\" reftarget=\"bool\" reftype=\"class\">\n    <literal_emphasis>\n\
  \        bool\n"
dict: "<pending_xref py:class=\"WorkspacePatch\" py:module=\"azure.mgmt.loganalytics.models\"\
  \ refdoc=\"azure.mgmt.loganalytics.models\" refdomain=\"py\" refexplicit=\"False\"\
  \ refspecific=\"True\" reftarget=\"dict\" reftype=\"class\">\n    <literal_emphasis>\n\
  \        dict\n"
float: "<pending_xref py:class=\"WorkspaceCapping\" py:module=\"azure.mgmt.loganalytics.models\"\
  \ refdoc=\"azure.mgmt.loganalytics.models\" refdomain=\"py\" refexplicit=\"False\"\
  \ refspecific=\"True\" reftarget=\"float\" reftype=\"class\">\n    <literal_emphasis>\n\
  \        float\n"
int: "<pending_xref py:class=\"True\" py:module=\"azure.mgmt.loganalytics.models\"\
  \ refdoc=\"azure.mgmt.loganalytics.models\" refdomain=\"py\" refspecific=\"False\"\
  \ reftarget=\"int\" reftype=\"class\">\n    int\n"
list: "<pending_xref py:class=\"IntelligencePacksOperations\" py:module=\"azure.mgmt.loganalytics.operations\"\
  \ refdoc=\"azure.mgmt.loganalytics.operations\" refdomain=\"py\" refexplicit=\"\
  False\" refspecific=\"True\" reftarget=\"list\" reftype=\"class\">\n    list\n"
long: "<pending_xref py:class=\"SearchMetadata\" py:module=\"azure.mgmt.loganalytics.models\"\
  \ refdoc=\"azure.mgmt.loganalytics.models\" refdomain=\"py\" refexplicit=\"False\"\
  \ refspecific=\"True\" reftarget=\"long\" reftype=\"class\">\n    <literal_emphasis>\n\
  \        long\n"
object: "<pending_xref py:class=\"WorkspacesOperations\" py:module=\"azure.mgmt.loganalytics.operations\"\
  \ refdoc=\"azure.mgmt.loganalytics.operations\" refdomain=\"py\" refexplicit=\"\
  False\" reftarget=\"object\" reftype=\"class\" refwarn=\"False\">\n    <literal\
  \ classes=\"xref py py-class\">\n        object\n"
str: "<pending_xref py:class=\"WorkspacesOperations\" py:module=\"azure.mgmt.loganalytics.operations\"\
  \ refdoc=\"azure.mgmt.loganalytics.operations\" refdomain=\"py\" refexplicit=\"\
  False\" refspecific=\"True\" reftarget=\"str\" reftype=\"class\">\n    <literal_emphasis>\n\
  \        str\n"
