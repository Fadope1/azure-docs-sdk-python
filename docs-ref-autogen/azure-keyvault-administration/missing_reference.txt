Any: "<pending_xref py:class=\"KeyVaultBackupClient\" py:module=\"azure.keyvault.administration.aio\"\
  \ refdoc=\"azure.keyvault.administration.aio\" refdomain=\"py\" refspecific=\"False\"\
  \ reftarget=\"Any\" reftype=\"class\">\n    Any\n"
AsyncItemPaged: "<pending_xref py:class=\"KeyVaultAccessControlClient\" py:module=\"\
  azure.keyvault.administration.aio\" refdoc=\"azure.keyvault.administration.aio\"\
  \ refdomain=\"py\" refspecific=\"False\" reftarget=\"AsyncItemPaged\" reftype=\"\
  class\">\n    AsyncItemPaged\n"
AsyncLROPoller: "<pending_xref py:class=\"KeyVaultBackupClient\" py:module=\"azure.keyvault.administration.aio\"\
  \ refdoc=\"azure.keyvault.administration.aio\" refdomain=\"py\" refspecific=\"False\"\
  \ reftarget=\"AsyncLROPoller\" reftype=\"class\">\n    AsyncLROPoller\n"
AsyncTokenCredential: "<pending_xref py:class=\"True\" py:module=\"azure.keyvault.administration.aio\"\
  \ refdoc=\"azure.keyvault.administration.aio\" refdomain=\"py\" refspecific=\"False\"\
  \ reftarget=\"AsyncTokenCredential\" reftype=\"class\">\n    AsyncTokenCredential\n"
ItemPaged: "<pending_xref py:class=\"KeyVaultAccessControlClient\" py:module=\"azure.keyvault.administration\"\
  \ refdoc=\"azure.keyvault.administration\" refdomain=\"py\" refspecific=\"False\"\
  \ reftarget=\"ItemPaged\" reftype=\"class\">\n    ItemPaged\n"
KeyVaultBackupResult: "<pending_xref py:class=\"KeyVaultBackupClient\" py:module=\"\
  azure.keyvault.administration.aio\" refdoc=\"azure.keyvault.administration.aio\"\
  \ refdomain=\"py\" refexplicit=\"False\" reftarget=\"KeyVaultBackupResult\" reftype=\"\
  class\" refwarn=\"False\">\n    <literal classes=\"xref py py-class\">\n       \
  \ KeyVaultBackupResult\n"
KeyVaultRoleScope: "<pending_xref py:class=\"KeyVaultAccessControlClient\" py:module=\"\
  azure.keyvault.administration.aio\" refdoc=\"azure.keyvault.administration.aio\"\
  \ refdomain=\"py\" refexplicit=\"False\" reftarget=\"KeyVaultRoleScope\" reftype=\"\
  class\" refwarn=\"False\">\n    <literal classes=\"xref py py-class\">\n       \
  \ KeyVaultRoleScope\n"
LROPoller: "<pending_xref py:class=\"KeyVaultBackupClient\" py:module=\"azure.keyvault.administration\"\
  \ refdoc=\"azure.keyvault.administration\" refdomain=\"py\" refspecific=\"False\"\
  \ reftarget=\"LROPoller\" reftype=\"class\">\n    LROPoller\n"
TokenCredential: "<pending_xref py:class=\"True\" py:module=\"azure.keyvault.administration\"\
  \ refdoc=\"azure.keyvault.administration\" refdomain=\"py\" refspecific=\"False\"\
  \ reftarget=\"TokenCredential\" reftype=\"class\">\n    TokenCredential\n"
UUID: "<pending_xref py:class=\"KeyVaultAccessControlClient\" py:module=\"azure.keyvault.administration.aio\"\
  \ refdoc=\"azure.keyvault.administration.aio\" refdomain=\"py\" refspecific=\"False\"\
  \ reftarget=\"UUID\" reftype=\"class\">\n    UUID\n"
list: "<pending_xref py:class=\"KeyVaultRoleDefinition\" py:module=\"azure.keyvault.administration\"\
  \ refdoc=\"azure.keyvault.administration\" refdomain=\"py\" refexplicit=\"False\"\
  \ refspecific=\"True\" reftarget=\"list\" reftype=\"class\">\n    <literal_emphasis>\n\
  \        list\n"
object: "<pending_xref py:class=\"KeyVaultRoleDefinition\" py:module=\"azure.keyvault.administration\"\
  \ refdoc=\"azure.keyvault.administration\" refdomain=\"py\" refexplicit=\"False\"\
  \ reftarget=\"object\" reftype=\"class\" refwarn=\"False\">\n    <literal classes=\"\
  xref py py-class\">\n        object\n"
str: "<pending_xref py:class=\"KeyVaultBackupClient\" py:module=\"azure.keyvault.administration.aio\"\
  \ refdoc=\"azure.keyvault.administration.aio\" refdomain=\"py\" refexplicit=\"False\"\
  \ refspecific=\"True\" reftarget=\"str\" reftype=\"class\">\n    <literal_emphasis>\n\
  \        str\n"
